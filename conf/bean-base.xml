<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    	 http://www.springframework.org/schema/beans/spring-beans.xsd
     	 http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx
     	 http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 导入外部的properties配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
                <value>classpath:log4j.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置c3p0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="jdbcUrl" value="${jdbcUrl}"></property>
        <property name="driverClass" value="${driverClass}"></property>
        <property name="user" value="${user}"></property>
        <property name="password" value="${password}"></property>
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="${initialPoolSize}"></property>
        <!--连接池中保留的最小连接数。Default: 3 -->
        <property name="minPoolSize" value="3"></property>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="${maxPoolSize}"></property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="3"></property>
        <!--最大空闲时间，1800秒内未使用则连接被丢弃，若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="1800"></property>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath:com/cx/test/entity/Person.hbm.xml</value>

                <value>classpath:com/cx/user/entity/User.hbm.xml</value>

                <value>classpath:com/cx/inform/entity/Info.hbm.xml</value>

                <value>classpath:com/cx/inform_doc/entity/InfoDoc.hbm.xml</value>

                <value>classpath:com/cx/inform/entity/InfoDocument.hbm.xml</value>

                <value>classpath:com/cx/policy/entity/Policy.hbm.xml</value>

                <value>classpath:com/cx/policy_doc/entity/PolicyDoc.hbm.xml</value>

                <value>classpath:com/cx/policy/entity/PolicyDocument.hbm.xml</value>

                <value>classpath:com/cx/dynamic/entity/Dynamic.hbm.xml</value>

                <value>classpath:com/cx/dynamic_doc/entity/DynamicDoc.hbm.xml</value>

                <value>classpath:com/cx/dynamic/entity/DynamicDocument.hbm.xml</value>

            </list>
        </property>
    </bean>

    <!--事务管理-->
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
         <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!--事务通知-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>

            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="*" rollback-for="Throwable"/>

        </tx:attributes>
    </tx:advice>
    <!--aop配置-->
    <aop:config>
        <!--* com.cx..service.impl.*.*(..))可以换为bean(*Service)扫描以Service结尾的bean-->
        <aop:pointcut id="serviceOperation" expression="execution(* com.cx..service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>





    <!--给子类注入sessionFactory , 抽象的bean,用了bean的继承-->
    <bean id="baseDao" abstract="true">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>


    <!--&lt;!&ndash;引入外部spring配置文件&ndash;&gt;-->
    <import resource="classpath:com/cx/test/conf/spring-test.xml"/>

    <import resource="classpath:com/cx/user/config/spring-user.xml"/>

    <import resource="classpath:com/cx/inform/config/spring-inform.xml"/>

    <import resource="classpath:com/cx/inform_doc/config/spring-informDoc.xml"/>

    <import resource="classpath:com/cx/policy/config/spring-policy.xml"/>

    <import resource="classpath:com/cx/policy_doc/config/spring-policyDoc.xml"/>

    <import resource="classpath:com/cx/dynamic/config/spring-dynamic.xml"/>

    <import resource="classpath:com/cx/dynamic_doc/config/spring-dynamicDoc.xml"/>
</beans>